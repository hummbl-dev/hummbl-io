name: Post-Deploy Verification

on:
  push:
    branches: [ main ]
    paths:
      - 'public/data/**'
      - 'scripts/**'
      - '.github/workflows/*.yml'
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Verify production deployment
      run: |
        # Set production URL from secret or default
        PRODUCTION_URL=${PRODUCTION_URL:-https://www.hummbl.io}
        
        # Run verification against production
        echo "Verifying production deployment at $PRODUCTION_URL"
        node scripts/verify_production_integrity.mjs
        
        # Generate compliance report
        node scripts/generate_compliance_report.mjs > compliance-report.json
        
        # Upload compliance report
        echo "COMPLIANCE_REPORT=$(cat compliance-report.json | jq -c '.')" >> $GITHUB_OUTPUT
      env:
        PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}
      
    - name: Upload compliance report
      uses: actions/upload-artifact@v4
      with:
        name: compliance-report
        path: compliance-report.json
    
    - name: Create GitHub Issue on Failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('compliance-report.json', 'utf8'));
          
          const failedFiles = report.checks.filter(c => c.status === '❌ MISMATCH' || c.status === '❌ ERROR');
          
          const issueBody = [
            '# Production Integrity Check Failed',
            '',
            `**Build:** ${process.env.GITHUB_SHA}`,
            `**Workflow:** ${process.env.GITHUB_WORKFLOW}`,
            '',
            '## Failed Verifications',
            '',
            failedFiles.map(f => `- ${f.file}: ${f.details}`).join('\n'),
            '',
            '## Full Report',
            '',
            '```json',
            JSON.stringify(report, null, 2),
            '```',
            '',
            '## Next Steps',
            '1. Investigate the reported mismatches',
            '2. Rollback if necessary',
            '3. Update verification hashes once resolved'
          ].join('\n');
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🚨 Production Integrity Check Failed',
            body: issueBody,
            labels: ['bug', 'security', 'needs-triage']
          });
      
    - name: Send Alert on Failure
      if: failure()
      continue-on-error: true
      run: |
        node scripts/alert_integrity_failure.mjs
      env:
        ALERT_WEBHOOK_URL: ${{ secrets.ALERT_WEBHOOK_URL }}
