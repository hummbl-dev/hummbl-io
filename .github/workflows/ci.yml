name: CI/CD Pipeline (Enhanced)

on:
  push:
    branches: [main, staging, develop]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      continue-on-error: true
      run: npm test -- --run
      env:
        CI: true
        VITE_ADMIN_PASSWORD: test_password_for_ci
    
    - name: Upload coverage to Codecov
      continue-on-error: true
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/coverage-summary.json
        fail_ci_if_error: false

  build:
    name: Build Application
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
        retention-days: 7

  bundle-size:
    name: Check Bundle Size
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Check bundle size
      run: |
        echo "Checking bundle sizes..."
        MAIN_JS_SIZE=$(stat -f%z dist/assets/*.js 2>/dev/null || stat -c%s dist/assets/*.js)
        MAIN_CSS_SIZE=$(stat -f%z dist/assets/*.css 2>/dev/null || stat -c%s dist/assets/*.css)
        TOTAL_SIZE=$((MAIN_JS_SIZE + MAIN_CSS_SIZE))
        MAX_SIZE=$((500 * 1024))
        
        echo "JS Size: $((MAIN_JS_SIZE / 1024)) KB"
        echo "CSS Size: $((MAIN_CSS_SIZE / 1024)) KB"
        echo "Total: $((TOTAL_SIZE / 1024)) KB"
        echo "Max allowed: 500 KB"
        
        if [ $TOTAL_SIZE -gt $MAX_SIZE ]; then
          echo "❌ Bundle size exceeds 500 KB limit!"
          exit 1
        else
          echo "✅ Bundle size within limits"
        fi

  lighthouse:
    name: Lighthouse Performance Audit
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Lighthouse CI
      continue-on-error: true
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://hummbl.io
        uploadArtifacts: true
        temporaryPublicStorage: true

  accessibility:
    name: Accessibility Tests
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Run accessibility audit
      continue-on-error: true
      run: |
        echo "Running accessibility checks..."
        npx serve -s dist -p 3000 &
        sleep 5
        npx axe-cli http://localhost:3000 --exit || true

  deploy-staging:
    name: Deploy to Staging
    needs: [test, build, bundle-size]
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel (Staging)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL }}
        github-token: ${{ secrets.FG_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--env=staging'

  deploy-production:
    name: Deploy to Production
    needs: [test, build, bundle-size]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://hummbl.io
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel (Production)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL }}
        github-token: ${{ secrets.FG_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
    
    - name: Notify deployment success
      if: success()
      run: |
        echo "✅ Production deployment successful!"
        echo "URL: https://hummbl.io"
