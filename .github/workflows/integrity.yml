name: Integrity Check

on:
  workflow_call:
    inputs:
      reason:
        required: false
        type: string
        default: 'Scheduled check'
      production_url:
        required: false
        type: string
        default: 'https://www.hummbl.io'
    secrets:
      ALERT_WEBHOOK_URL:
        required: false

jobs:
  verify:
    name: Verify Production Integrity
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Ensure all files are checked out
          fetch-tags: true
          # Don't use sparse checkout
          sparse-checkout: ''
          # Show all tracked files for debugging
          show-progress: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Verify pnpm-lock.yaml
        run: |
          if [ ! -f "pnpm-lock.yaml" ]; then
            echo "Error: pnpm-lock.yaml not found!"
            echo "Current directory: $(pwd)"
            echo "Files in current directory:"
            ls -la
            exit 1
          fi
          echo "pnpm-lock.yaml exists and is valid"

      - name: Install dependencies
        run: |
          echo "Installing dependencies using pnpm..."
          pnpm install --frozen-lockfile || {
            echo "pnpm install failed. Trying to recover..."
            # Try to regenerate the lockfile if the frozen install fails
            pnpm install
            exit 1
          }

      - name: Debug - List files
        run: |
          ls -la
          echo "Current directory: $(pwd)"
          echo "pnpm-lock exists: $(ls pnpm-lock.yaml 2>/dev/null && echo 'yes' || echo 'no')"
          echo "Script exists: $(ls scripts/verify_production_integrity.mjs 2>/dev/null && echo 'yes' || echo 'no')"

      - name: Run integrity check
        id: integrity
        run: |
          # Ensure URL has a default if not provided
          PROD_URL="${1:-https://www.hummbl.io}"
          echo "Running integrity check against: $PROD_URL"
          if [ ! -f "scripts/verify_production_integrity.mjs" ]; then
            echo "Error: verify_production_integrity.mjs not found!"
            ls -la scripts/
            exit 1
          fi
          node scripts/verify_production_integrity.mjs --url "$PROD_URL" || echo "Integrity check failed"
        env:
          NODE_OPTIONS: --max-old-space-size=2048

      - name: Send alert on failure
        if: failure() && github.event_name != 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const webhookUrl = process.env.ALERT_WEBHOOK_URL;
            if (!webhookUrl) {
              console.log('No ALERT_WEBHOOK_URL provided, skipping alert');
              return;
            }
            
            const { data } = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            
            await fetch(webhookUrl, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                text: `‚ùå Integrity check failed for ${context.repo.repo}`,
                run_url: data.html_url,
                run_number: data.run_number,
                reason: '${{ inputs.reason }}'
              })
            });
        env:
          ALERT_WEBHOOK_URL: ${{ secrets.ALERT_WEBHOOK_URL }}
