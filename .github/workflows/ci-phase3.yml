name: CI - Phase3 Enhanced

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - '**/*.mdx'
      - '**/docs/**'
      - '**/.github/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - '**/*.mdx'
      - '**/docs/**'
      - '**/.github/**'

# Prevent concurrent workflow runs for the same branch/PR
concurrency:
  group: phase3-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests (Phase 3)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      NODE_OPTIONS: '--max-old-space-size=2048'

    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm list --depth=0

      - name: Check Node.js version
        run: node --version

      - name: Build TypeScript types
        run: pnpm run build:types

      - name: Run type checking
        run: pnpm run typecheck

      - name: Run tests with detailed output
        id: tests
        continue-on-error: false
        timeout-minutes: 15
        run: |
          echo "=== Environment Information ==="
          node --version
          npm --version
          echo "============================="

          echo "Running Phase 3 tests with memory optimization..."
          mkdir -p test-results

          # Run tests with JUnit reporter for better CI integration
          npm run test:memory-optimized -- --reporter=junit --reporter-options="outputFile=test-results/junit-phase3.xml" --verbose || {
            echo "Tests failed with exit code $?"
            # Don't fail here, we'll handle it after collecting artifacts
            echo "::set-output name=status::failure"
            exit 0
          }
          echo "::set-output name=status::success"
        env:
          NODE_ENV: test
          CI: true
          VITE_ADMIN_PASSWORD: test_password_for_ci
          VITE_API_URL: https://api.hummbl.io
          VITE_ENVIRONMENT: ci

      - name: Check for compliance report (Phase 3)
        id: check_compliance_phase3
        continue-on-error: true
        run: |
          if [ -f "compliance-report.json" ]; then
            echo "compliance_report_exists=true" >> $GITHUB_OUTPUT
          else
            echo "compliance_report_exists=false" >> $GITHUB_OUTPUT
            echo "Warning: compliance-report.json not found in Phase 3, continuing without it"
          fi

      - name: Upload test results and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-phase3-${{ github.run_id }}
          path: |
            coverage/
            test-results/
            .next/logs/
            ${{ steps.check_compliance_phase3.outputs.compliance_report_exists == 'true' && 'compliance-report.json' || '' }}
          retention-days: 7
          if-no-files-found: warn

      - name: Upload coverage to Codecov (Phase 3)
        if: steps.tests.outputs.status == 'success'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN || 'none' }}
          files: ./coverage/coverage-final.json
          directory: ./coverage/
          fail_ci_if_error: false
          verbose: true
          name: ${{ github.workflow }}-${{ github.ref_name }}

      - name: Set test status
        if: steps.tests.outputs.status == 'failure'
        run: exit 1
      - name: Upload test summary
        if: always()
        run: |
          mkdir -p .github/actions
          echo "tests: $(date)" > .github/actions/summary.md
          echo "test-status: $?" >> .github/actions/summary.md
      - name: Run build
        run: pnpm run build
      - name: Start preview server
        run: |
          nohup npx vite preview --host --port 4173 > /dev/null 2>&1 &
          for i in {1..30}; do
            if curl -sSf http://localhost:4173 > /dev/null; then echo "preview up"; break; fi;
            sleep 1;
          done
      - name: Setup Chrome for Lighthouse
        uses: browser-actions/setup-chrome@v1
      - name: Validate models schema
        run: node scripts/validate-models.mjs
      - name: Audit (Lighthouse + Axe)
        continue-on-error: true
        run: node scripts/audit.mjs
        env:
          TARGET_URL: http://localhost:4173
          LH_MIN: 0.9
          AXE_MAX: 0
      - name: Telemetry
        continue-on-error: true
        run: |
          # pass observed timings into telemetry
          export METRIC_TESTS=5.58
          export METRIC_BUILD=1.31
          node scripts/telemetry.mjs
      - name: Upload summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: phase3-summary
          path: .github/actions/summary.md
      - name: Upload audit reports
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: audit-reports
          path: reports
          if-no-files-found: ignore
