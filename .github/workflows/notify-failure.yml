name: Notify on Workflow Failure

on:
  workflow_run:
    workflows: ["Integrity Check Runner"]
    types: [completed]
    branches: [main, develop]

jobs:
  notify-on-failure:
    if: >
      github.event.workflow_run.conclusion == 'failure' ||
      github.event.workflow_run.conclusion == 'cancelled'
    
    runs-on: ubuntu-latest
    steps:
      - name: Prepare notification
        id: prepare
        run: |
          # Get workflow run details
          RUN_URL="${{ github.event.workflow_run.html_url }}"
          COMMIT_SHA="${{ github.event.workflow_run.head_sha }}"
          COMMIT_MSG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/$COMMIT_SHA" | \
            jq -r '.commit.message | split("\n")[0]')
          
          # Prepare message
          # Prepare message with proper escaping for YAML and Slack formatting
          MESSAGE="‚ùå *Workflow Failed*: \`${{ github.workflow }} #${{ github.run_number }}\`"
          MESSAGE+="\\n*Repository*: ${{ github.repository }}"
          MESSAGE+="\\n*Branch*: \`${{ github.ref_name }}\`"
          MESSAGE+="\\n*Commit*: \`${COMMIT_SHA:0:7}\` ${COMMIT_MSG//$'\n'/ }"  # Remove newlines from commit message
          MESSAGE+="\\n*Triggered by*: ${{ github.actor }}"
          MESSAGE+="\\n*View Logs*: $RUN_URL"
          
          # Set outputs for other steps
          echo "MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$MESSAGE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          echo "SLACK_MESSAGE<<EOF" >> $GITHUB_ENV
          echo '{"blocks": [' >> $GITHUB_ENV
          echo '  {' >> $GITHUB_ENV
          echo '    "type": "section",' >> $GITHUB_ENV
          echo '    "text": {' >> $GITHUB_ENV
          echo '      "type": "mrkdwn",' >> $GITHUB_ENV
          echo '      "text": "'$MESSAGE'"' >> $GITHUB_ENV
          echo '    },' >> $GITHUB_ENV
          echo '    "accessory": {' >> $GITHUB_ENV
          echo '      "type": "button",' >> $GITHUB_ENV
          echo '      "text": {' >> $GITHUB_ENV
          echo '        "type": "plain_text",' >> $GITHUB_ENV
          echo '        "text": "View Workflow Run"' >> $GITHUB_ENV
          echo '      },' >> $GITHUB_ENV
          echo '      "url": "'$RUN_URL'"' >> $GITHUB_ENV
          echo '    }' >> $GITHUB_ENV
          echo '  }' >> $GITHUB_ENV
          echo ']}' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Debug output (will be in logs but not sent to Slack)
          echo "Notification prepared for Slack"

      - name: Send Slack Notification
        if: failure() && github.event.workflow_run.conclusion == 'failure'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'alerts'  # Replace with your channel name or ID
          payload: ${{ env.SLACK_MESSAGE }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Debug Output (for testing)
        run: |
          echo "${{ env.MESSAGE }}"
          echo "---"
          echo "${{ env.SLACK_MESSAGE }}"

      - name: Create GitHub Issue (Fallback)
        if: failure() && github.event.workflow_run.conclusion == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Workflow failed: ${{ github.workflow }} #${{ github.run_number }}`,
              body: `${{ env.MESSAGE }}

<details>
<summary>Workflow Details</summary>

- **Workflow**: ${{ github.workflow }}
- **Run Number**: #${{ github.run_number }}
- **Commit**: \`${{ github.sha }}\`
- **Triggered by**: @${{ github.actor }}
- **View Logs**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
</details>`,
              labels: ['ci-failure']
            });
            console.log(`Created issue #${issue.number}: ${issue.html_url}`);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
