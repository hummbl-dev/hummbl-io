name: Pre-Deploy Verification

on:
  pull_request:
    branches: [main]
    paths:
      - 'public/data/**'
      - 'scripts/**'
      - '.github/workflows/*.yml'

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run build verification
        run: |
          # Run the build process
          pnpm run build

          # Run the verification script
          node scripts/verify_production_integrity.mjs

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            public/data/**
            dist/**

      - name: Create verification log
        if: github.event_name == 'pull_request'
        id: verification
        run: |
          # Run verification and capture the output
          node scripts/verify_production_integrity.mjs > verification.log 2>&1 || echo "verification_failed=true" >> $GITHUB_OUTPUT

          # Output the verification result
          echo "verification_passed=${{ !steps.verification.outputs.verification_failed }}" >> $GITHUB_OUTPUT

          # Always exit successfully to allow the comment step to run
          exit 0

      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.verification.outputs.verification_passed == 'true'
        continue-on-error: true # Don't fail the workflow if comment fails
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            let verificationOutput = '(No verification log found)';

            try {
              if (fs.existsSync('verification.log')) {
                verificationOutput = fs.readFileSync('verification.log', 'utf8');
              }

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `### üîç Pre-Deploy Verification Results\n\n\`\`\`\n${verificationOutput}\n\`\`\`\n\n‚úÖ Build and verification completed successfully.`
              });
            } catch (error) {
              console.log('Warning: Could not post comment to PR. This is non-fatal.');
              console.log('Error details:', error.message);
            }

      - name: Fail if verification failed
        if: steps.verification.outputs.verification_failed == 'true'
        run: |
          echo "‚ùå Verification failed. Check the logs for details."
          exit 1
